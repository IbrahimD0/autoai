"use client"

import React, { useState, useRef, useEffect } from "react"
import { motion, useScroll, useTransform, useInView, useSpring } from "framer-motion"
import { 
  Phone, 
  Mail, 
  MapPin, 
  Clock, 
  Star, 
  Menu, 
  X, 
  MessageCircle,
  Send,
  ChevronDown,
  Facebook,
  Instagram,
  Twitter,
  Coffee,
  Utensils,
  ShoppingBag,
  Heart,
  Search,
  User,
  Bot
} from "lucide-react"
// Utility function
function cn(...classes: (string | undefined | null | false)[]): string {
  return classes.filter(Boolean).join(' ')
}

// Business data interface
interface BusinessInfo {
  name: string
  tagline: string
  description: string
  address: string
  phone: string
  email: string
  hours: string
  socialMedia: {
    facebook?: string
    instagram?: string
    twitter?: string
  }
}

interface MenuItem {
  name: string
  price: string
  description?: string
  category: string
}

interface MenuCategory {
  category: string
  items: MenuItem[]
}

// Chat interfaces
interface ChatMessage {
  id: string
  content: string
  sender: "user" | "bot"
  timestamp: string
}

// Default business data
const defaultBusinessInfo: BusinessInfo = {
  name: "Artisan Coffee & Bistro",
  tagline: "Where Every Cup Tells a Story",
  description: "A cozy neighborhood coffee shop serving artisanal coffee, fresh pastries, and locally-sourced ingredients. We're passionate about creating a warm community space where friends gather and memories are made.",
  address: "123 Main Street, Downtown District, City 12345",
  phone: "(555) 123-4567",
  email: "hello@artisancoffee.com",
  hours: "Mon-Fri: 6:30 AM - 8:00 PM, Sat-Sun: 7:00 AM - 9:00 PM",
  socialMedia: {
    facebook: "https://facebook.com/artisancoffee",
    instagram: "https://instagram.com/artisancoffee",
    twitter: "https://twitter.com/artisancoffee"
  }
}

const defaultMenuItems: MenuCategory[] = [
  {
    category: "Coffee & Espresso",
    items: [
      { name: "Signature Blend", price: "$4.50", description: "Our house blend with notes of chocolate and caramel", category: "Coffee & Espresso" },
      { name: "Single Origin Ethiopia", price: "$5.25", description: "Bright and fruity with floral undertones", category: "Coffee & Espresso" },
      { name: "Cappuccino", price: "$4.75", description: "Classic espresso with steamed milk and foam", category: "Coffee & Espresso" },
      { name: "Cold Brew", price: "$4.25", description: "Smooth and refreshing, steeped for 12 hours", category: "Coffee & Espresso" }
    ]
  },
  {
    category: "Pastries & Treats",
    items: [
      { name: "Croissant", price: "$3.50", description: "Buttery, flaky, baked fresh daily", category: "Pastries & Treats" },
      { name: "Blueberry Muffin", price: "$3.25", description: "Made with local organic blueberries", category: "Pastries & Treats" },
      { name: "Chocolate Chip Cookie", price: "$2.75", description: "Warm, gooey, and irresistible", category: "Pastries & Treats" },
      { name: "Avocado Toast", price: "$8.50", description: "Multigrain bread with smashed avocado and sea salt", category: "Pastries & Treats" }
    ]
  },
  {
    category: "Lunch & Light Bites",
    items: [
      { name: "Grilled Panini", price: "$9.75", description: "Turkey, swiss, and pesto on sourdough", category: "Lunch & Light Bites" },
      { name: "Caesar Salad", price: "$8.25", description: "Crisp romaine with house-made dressing", category: "Lunch & Light Bites" },
      { name: "Soup of the Day", price: "$6.50", description: "Ask your server for today's selection", category: "Lunch & Light Bites" },
      { name: "Quinoa Bowl", price: "$10.25", description: "Roasted vegetables and tahini dressing", category: "Lunch & Light Bites" }
    ]
  }
]

// Chatbot knowledge base
const chatbotKnowledge = {
  menu: defaultMenuItems,
  businessInfo: defaultBusinessInfo,
  faqs: [
    { question: "What are your hours?", answer: "We're open Monday-Friday 6:30 AM - 8:00 PM, and Saturday-Sunday 7:00 AM - 9:00 PM." },
    { question: "Do you have WiFi?", answer: "Yes! We offer free WiFi for all customers. The password is 'ArtisanCoffee2024'." },
    { question: "Can I order ahead?", answer: "Absolutely! You can call us at (555) 123-4567 to place an order for pickup." },
    { question: "Do you cater events?", answer: "Yes, we offer catering services for meetings and events. Please call us to discuss your needs." }
  ]
}

// Chatbot component
function Chatbot({ isOpen, onClose }: { isOpen: boolean; onClose: () => void }) {
  const [messages, setMessages] = useState<ChatMessage[]>([
    {
      id: "1",
      content: "Hi! I'm here to help you with information about our menu, hours, location, and more. What would you like to know?",
      sender: "bot",
      timestamp: new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" })
    }
  ])
  const [inputValue, setInputValue] = useState("")
  const messagesEndRef = useRef<HTMLDivElement>(null)

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" })
  }

  useEffect(() => {
    scrollToBottom()
  }, [messages])

  const generateBotResponse = (userMessage: string): string => {
    const message = userMessage.toLowerCase()
    
    // Menu inquiries
    if (message.includes("menu") || message.includes("food") || message.includes("drink")) {
      return "Here are our main categories: Coffee & Espresso, Pastries & Treats, and Lunch & Light Bites. Our signature items include our house blend coffee ($4.50), fresh croissants ($3.50), and grilled paninis ($9.75). What specific items would you like to know about?"
    }
    
    // Hours inquiry
    if (message.includes("hour") || message.includes("open") || message.includes("close")) {
      return `We're open ${chatbotKnowledge.businessInfo.hours}. We'd love to see you soon!`
    }
    
    // Location inquiry
    if (message.includes("location") || message.includes("address") || message.includes("where")) {
      return `You can find us at ${chatbotKnowledge.businessInfo.address}. We're in the heart of the downtown district!`
    }
    
    // Contact inquiry
    if (message.includes("phone") || message.includes("call") || message.includes("contact")) {
      return `You can reach us at ${chatbotKnowledge.businessInfo.phone} or email us at ${chatbotKnowledge.businessInfo.email}.`
    }
    
    // Price inquiries
    if (message.includes("price") || message.includes("cost") || message.includes("$")) {
      return "Our coffee drinks range from $4.25-$5.25, pastries are $2.75-$3.50, and lunch items are $6.50-$10.25. What specific item would you like to know about?"
    }
    
    // Recommendations
    if (message.includes("recommend") || message.includes("popular") || message.includes("best")) {
      return "Our most popular items are the Signature Blend coffee, fresh croissants, and grilled paninis. For something special, try our Single Origin Ethiopia coffee - it's amazing!"
    }
    
    // WiFi
    if (message.includes("wifi") || message.includes("internet")) {
      return "Yes! We offer free WiFi for all customers. The password is 'ArtisanCoffee2024'."
    }
    
    // Default response
    return "I'd be happy to help! I can tell you about our menu items, hours (Mon-Fri 6:30 AM - 8:00 PM, Sat-Sun 7:00 AM - 9:00 PM), location, or answer any other questions. What would you like to know?"
  }

  const handleSendMessage = () => {
    if (!inputValue.trim()) return

    const userMessage: ChatMessage = {
      id: Date.now().toString(),
      content: inputValue,
      sender: "user",
      timestamp: new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" })
    }

    setMessages(prev => [...prev, userMessage])
    setInputValue("")

    // Generate bot response
    setTimeout(() => {
      const botResponse: ChatMessage = {
        id: (Date.now() + 1).toString(),
        content: generateBotResponse(inputValue),
        sender: "bot",
        timestamp: new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" })
      }
      setMessages(prev => [...prev, botResponse])
    }, 1000)
  }

  if (!isOpen) return null

  return (
    <motion.div
      initial={{ opacity: 0, y: 20, scale: 0.95 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      exit={{ opacity: 0, y: 20, scale: 0.95 }}
      className="fixed bottom-4 right-4 w-80 h-96 bg-white dark:bg-gray-900 rounded-lg shadow-2xl border border-gray-200 dark:border-gray-700 flex flex-col z-50"
    >
      {/* Header */}
      <div className="flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700">
        <div className="flex items-center gap-2">
          <div className="w-8 h-8 bg-gradient-to-r from-amber-500 to-orange-500 rounded-full flex items-center justify-center">
            <Bot className="w-4 h-4 text-white" />
          </div>
          <div>
            <h3 className="font-medium text-gray-900 dark:text-gray-100">CafÃ© Assistant</h3>
            <p className="text-xs text-gray-500 dark:text-gray-400">Online now</p>
          </div>
        </div>
        <button
          onClick={onClose}
          className="p-1 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full transition-colors"
        >
          <X className="w-4 h-4 text-gray-500" />
        </button>
      </div>

      {/* Messages */}
      <div className="flex-1 overflow-y-auto p-4 space-y-3">
        {messages.map((message) => (
          <div
            key={message.id}
            className={cn(
              "flex",
              message.sender === "user" ? "justify-end" : "justify-start"
            )}
          >
            <div
              className={cn(
                "max-w-[80%] p-3 rounded-lg text-sm",
                message.sender === "user"
                  ? "bg-gradient-to-r from-amber-500 to-orange-500 text-white"
                  : "bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100"
              )}
            >
              <p>{message.content}</p>
              <p className={cn(
                "text-xs mt-1",
                message.sender === "user" ? "text-white/70" : "text-gray-500"
              )}>
                {message.timestamp}
              </p>
            </div>
          </div>
        ))}
        <div ref={messagesEndRef} />
      </div>

      {/* Input */}
      <div className="p-4 border-t border-gray-200 dark:border-gray-700">
        <div className="flex gap-2">
          <input
            type="text"
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
            onKeyDown={(e) => e.key === "Enter" && handleSendMessage()}
            placeholder="Ask about our menu, hours, location..."
            className="flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-amber-500 dark:bg-gray-800 dark:text-gray-100"
          />
          <button
            onClick={handleSendMessage}
            className="p-2 bg-gradient-to-r from-amber-500 to-orange-500 text-white rounded-lg hover:from-amber-600 hover:to-orange-600 transition-colors"
          >
            <Send className="w-4 h-4" />
          </button>
        </div>
      </div>
    </motion.div>
  )
}

// Hero section component
function HeroSection({ businessInfo }: { businessInfo: BusinessInfo }) {
  const sectionRef = useRef<HTMLDivElement>(null)
  const { scrollYProgress } = useScroll({
    target: sectionRef,
    offset: ["start end", "end start"]
  })

  const y1 = useTransform(scrollYProgress, [0, 1], [0, -50])
  const y2 = useTransform(scrollYProgress, [0, 1], [0, 50])

  return (
    <section ref={sectionRef} className="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-amber-50 via-orange-50 to-red-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
      {/* Animated background elements */}
      <motion.div
        className="absolute top-20 left-10 w-64 h-64 rounded-full bg-gradient-to-r from-amber-200/20 to-orange-200/20 blur-3xl"
        style={{ y: y1 }}
      />
      <motion.div
        className="absolute bottom-20 right-10 w-80 h-80 rounded-full bg-gradient-to-r from-orange-200/20 to-red-200/20 blur-3xl"
        style={{ y: y2 }}
      />

      <div className="container mx-auto px-4 text-center relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="max-w-4xl mx-auto"
        >
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            className="inline-flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-full border border-amber-200 dark:border-gray-700 mb-6"
          >
            <Coffee className="w-4 h-4 text-amber-600" />
            <span className="text-sm font-medium text-gray-700 dark:text-gray-300">Local Favorite Since 2020</span>
          </motion.div>

          <motion.h1
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.3 }}
            className="text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-amber-600 via-orange-600 to-red-600 bg-clip-text text-transparent"
          >
            {businessInfo.name}
          </motion.h1>

          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            className="text-xl md:text-2xl text-gray-600 dark:text-gray-300 mb-4 font-light"
          >
            {businessInfo.tagline}
          </motion.p>

          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.5 }}
            className="text-lg text-gray-600 dark:text-gray-400 mb-8 max-w-2xl mx-auto leading-relaxed"
          >
            {businessInfo.description}
          </motion.p>

          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className="flex flex-col sm:flex-row gap-4 justify-center items-center"
          >
            <button className="px-8 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white rounded-full font-medium hover:from-amber-600 hover:to-orange-600 transition-all duration-300 transform hover:scale-105 shadow-lg">
              View Menu
            </button>
            <button className="px-8 py-3 border-2 border-amber-500 text-amber-600 dark:text-amber-400 rounded-full font-medium hover:bg-amber-500 hover:text-white transition-all duration-300">
              Get Directions
            </button>
          </motion.div>
        </motion.div>
      </div>
    </section>
  )
}

// Menu section component
function MenuSection({ menuItems }: { menuItems: MenuCategory[] }) {
  const [searchTerm, setSearchTerm] = useState("")
  const [selectedCategory, setSelectedCategory] = useState("all")

  const filteredItems = menuItems.flatMap(category => 
    category.items.filter(item => 
      (selectedCategory === "all" || item.category === selectedCategory) &&
      item.name.toLowerCase().includes(searchTerm.toLowerCase())
    )
  )

  return (
    <section className="py-20 bg-white dark:bg-gray-900">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-12"
        >
          <h2 className="text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-white">Our Menu</h2>
          <p className="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
            Discover our carefully crafted selection of coffee, pastries, and light meals
          </p>
        </motion.div>

        {/* Search and filter */}
        <div className="max-w-2xl mx-auto mb-12">
          <div className="relative mb-6">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
            <input
              type="text"
              placeholder="Search menu items..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 dark:bg-gray-800 dark:text-white"
            />
          </div>

          <div className="flex flex-wrap gap-2 justify-center">
            <button
              onClick={() => setSelectedCategory("all")}
              className={cn(
                "px-4 py-2 rounded-full text-sm font-medium transition-colors",
                selectedCategory === "all"
                  ? "bg-amber-500 text-white"
                  : "bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700"
              )}
            >
              All Items
            </button>
            {menuItems.map((category) => (
              <button
                key={category.category}
                onClick={() => setSelectedCategory(category.category)}
                className={cn(
                  "px-4 py-2 rounded-full text-sm font-medium transition-colors",
                  selectedCategory === category.category
                    ? "bg-amber-500 text-white"
                    : "bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700"
                )}
              >
                {category.category}
              </button>
            ))}
          </div>
        </div>

        {/* Menu items */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredItems.map((item, index) => (
            <motion.div
              key={`${item.category}-${item.name}`}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              viewport={{ once: true }}
              className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 dark:border-gray-700 group hover:scale-105"
            >
              <div className="flex justify-between items-start mb-3">
                <h3 className="text-xl font-semibold text-gray-900 dark:text-white group-hover:text-amber-600 transition-colors">
                  {item.name}
                </h3>
                <span className="text-lg font-bold text-amber-600">{item.price}</span>
              </div>
              {item.description && (
                <p className="text-gray-600 dark:text-gray-400 text-sm leading-relaxed">
                  {item.description}
                </p>
              )}
              <div className="mt-4 flex items-center justify-between">
                <span className="text-xs px-2 py-1 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">
                  {item.category}
                </span>
                <button className="text-amber-600 hover:text-amber-700 transition-colors">
                  <Heart className="w-5 h-5" />
                </button>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  )
}

// Contact section component
function ContactSection({ businessInfo }: { businessInfo: BusinessInfo }) {
  return (
    <section className="py-20 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-12"
        >
          <h2 className="text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-white">Visit Us</h2>
          <p className="text-xl text-gray-600 dark:text-gray-400">
            We'd love to welcome you to our cozy cafÃ©
          </p>
        </motion.div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-6xl mx-auto">
          {/* Contact Info */}
          <motion.div
            initial={{ opacity: 0, x: -30 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="space-y-8"
          >
            <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
              <div className="flex items-center gap-4 mb-4">
                <div className="w-12 h-12 bg-gradient-to-r from-amber-500 to-orange-500 rounded-full flex items-center justify-center">
                  <MapPin className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 dark:text-white">Location</h3>
                  <p className="text-gray-600 dark:text-gray-400">{businessInfo.address}</p>
                </div>
              </div>
            </div>

            <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
              <div className="flex items-center gap-4 mb-4">
                <div className="w-12 h-12 bg-gradient-to-r from-amber-500 to-orange-500 rounded-full flex items-center justify-center">
                  <Clock className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 dark:text-white">Hours</h3>
                  <p className="text-gray-600 dark:text-gray-400">{businessInfo.hours}</p>
                </div>
              </div>
            </div>

            <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
              <div className="flex items-center gap-4 mb-4">
                <div className="w-12 h-12 bg-gradient-to-r from-amber-500 to-orange-500 rounded-full flex items-center justify-center">
                  <Phone className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 dark:text-white">Contact</h3>
                  <p className="text-gray-600 dark:text-gray-400">{businessInfo.phone}</p>
                  <p className="text-gray-600 dark:text-gray-400">{businessInfo.email}</p>
                </div>
              </div>
            </div>

            {/* Social Media */}
            <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">Follow Us</h3>
              <div className="flex gap-4">
                {businessInfo.socialMedia.facebook && (
                  <a href={businessInfo.socialMedia.facebook} className="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center text-white hover:bg-blue-600 transition-colors">
                    <Facebook className="w-5 h-5" />
                  </a>
                )}
                {businessInfo.socialMedia.instagram && (
                  <a href={businessInfo.socialMedia.instagram} className="w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white hover:from-purple-600 hover:to-pink-600 transition-colors">
                    <Instagram className="w-5 h-5" />
                  </a>
                )}
                {businessInfo.socialMedia.twitter && (
                  <a href={businessInfo.socialMedia.twitter} className="w-10 h-10 bg-blue-400 rounded-full flex items-center justify-center text-white hover:bg-blue-500 transition-colors">
                    <Twitter className="w-5 h-5" />
                  </a>
                )}
              </div>
            </div>
          </motion.div>

          {/* Map placeholder */}
          <motion.div
            initial={{ opacity: 0, x: 30 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg"
          >
            <div className="w-full h-96 bg-gradient-to-br from-amber-100 to-orange-100 dark:from-gray-700 dark:to-gray-600 rounded-lg flex items-center justify-center">
              <div className="text-center">
                <MapPin className="w-12 h-12 text-amber-600 mx-auto mb-4" />
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">Interactive Map</h3>
                <p className="text-gray-600 dark:text-gray-400">Click to view directions</p>
              </div>
            </div>
          </motion.div>
        </div>
      </div>
    </section>
  )
}

// Main website component
function LocalShopWebsite({
  businessInfo = defaultBusinessInfo,
  menuItems = defaultMenuItems
}: {
  businessInfo?: BusinessInfo
  menuItems?: MenuCategory[]
}) {
  const [isChatOpen, setIsChatOpen] = useState(false)
  const [isMenuOpen, setIsMenuOpen] = useState(false)

  return (
    <div className="min-h-screen bg-white dark:bg-gray-900">
      {/* Navigation */}
      <nav className="fixed top-0 left-0 right-0 z-40 bg-white/90 dark:bg-gray-900/90 backdrop-blur-md border-b border-gray-200 dark:border-gray-700">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center gap-2">
              <Coffee className="w-8 h-8 text-amber-600" />
              <span className="text-xl font-bold text-gray-900 dark:text-white">{businessInfo.name}</span>
            </div>

            {/* Desktop Navigation */}
            <div className="hidden md:flex items-center gap-8">
              <a href="#home" className="text-gray-700 dark:text-gray-300 hover:text-amber-600 transition-colors">Home</a>
              <a href="#menu" className="text-gray-700 dark:text-gray-300 hover:text-amber-600 transition-colors">Menu</a>
              <a href="#about" className="text-gray-700 dark:text-gray-300 hover:text-amber-600 transition-colors">About</a>
              <a href="#contact" className="text-gray-700 dark:text-gray-300 hover:text-amber-600 transition-colors">Contact</a>
              <button className="px-4 py-2 bg-gradient-to-r from-amber-500 to-orange-500 text-white rounded-full hover:from-amber-600 hover:to-orange-600 transition-colors">
                Order Now
              </button>
            </div>

            {/* Mobile menu button */}
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="md:hidden p-2 text-gray-700 dark:text-gray-300"
            >
              {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>

          {/* Mobile Navigation */}
          {isMenuOpen && (
            <motion.div
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -20 }}
              className="md:hidden py-4 border-t border-gray-200 dark:border-gray-700"
            >
              <div className="flex flex-col gap-4">
                <a href="#home" className="text-gray-700 dark:text-gray-300 hover:text-amber-600 transition-colors">Home</a>
                <a href="#menu" className="text-gray-700 dark:text-gray-300 hover:text-amber-600 transition-colors">Menu</a>
                <a href="#about" className="text-gray-700 dark:text-gray-300 hover:text-amber-600 transition-colors">About</a>
                <a href="#contact" className="text-gray-700 dark:text-gray-300 hover:text-amber-600 transition-colors">Contact</a>
                <button className="px-4 py-2 bg-gradient-to-r from-amber-500 to-orange-500 text-white rounded-full hover:from-amber-600 hover:to-orange-600 transition-colors w-fit">
                  Order Now
                </button>
              </div>
            </motion.div>
          )}
        </div>
      </nav>

      {/* Main Content */}
      <main>
        <div id="home">
          <HeroSection businessInfo={businessInfo} />
        </div>
        <div id="menu">
          <MenuSection menuItems={menuItems} />
        </div>
        <div id="contact">
          <ContactSection businessInfo={businessInfo} />
        </div>
      </main>

      {/* Chatbot Toggle Button */}
      <motion.button
        onClick={() => setIsChatOpen(!isChatOpen)}
        className="fixed bottom-4 right-4 w-14 h-14 bg-gradient-to-r from-amber-500 to-orange-500 text-white rounded-full shadow-lg hover:from-amber-600 hover:to-orange-600 transition-all duration-300 flex items-center justify-center z-40"
        whileHover={{ scale: 1.1 }}
        whileTap={{ scale: 0.9 }}
      >
        {isChatOpen ? <X className="w-6 h-6" /> : <MessageCircle className="w-6 h-6" />}
      </motion.button>

      {/* Chatbot */}
      <Chatbot isOpen={isChatOpen} onClose={() => setIsChatOpen(false)} />

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div>
              <div className="flex items-center gap-2 mb-4">
                <Coffee className="w-8 h-8 text-amber-500" />
                <span className="text-xl font-bold">{businessInfo.name}</span>
              </div>
              <p className="text-gray-400 mb-4">{businessInfo.tagline}</p>
              <div className="flex gap-4">
                {businessInfo.socialMedia.facebook && (
                  <a href={businessInfo.socialMedia.facebook} className="text-gray-400 hover:text-white transition-colors">
                    <Facebook className="w-5 h-5" />
                  </a>
                )}
                {businessInfo.socialMedia.instagram && (
                  <a href={businessInfo.socialMedia.instagram} className="text-gray-400 hover:text-white transition-colors">
                    <Instagram className="w-5 h-5" />
                  </a>
                )}
                {businessInfo.socialMedia.twitter && (
                  <a href={businessInfo.socialMedia.twitter} className="text-gray-400 hover:text-white transition-colors">
                    <Twitter className="w-5 h-5" />
                  </a>
                )}
              </div>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold mb-4">Quick Links</h3>
              <div className="space-y-2">
                <a href="#home" className="block text-gray-400 hover:text-white transition-colors">Home</a>
                <a href="#menu" className="block text-gray-400 hover:text-white transition-colors">Menu</a>
                <a href="#about" className="block text-gray-400 hover:text-white transition-colors">About</a>
                <a href="#contact" className="block text-gray-400 hover:text-white transition-colors">Contact</a>
              </div>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold mb-4">Contact Info</h3>
              <div className="space-y-2 text-gray-400">
                <p>{businessInfo.address}</p>
                <p>{businessInfo.phone}</p>
                <p>{businessInfo.email}</p>
              </div>
            </div>
          </div>
          
          <div className="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
            <p>&copy; 2024 {businessInfo.name}. All rights reserved.</p>
          </div>
        </div>
      </footer>
    </div>
  )
}

export default LocalShopWebsite